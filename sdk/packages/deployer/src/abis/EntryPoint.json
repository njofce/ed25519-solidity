{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "preOpGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paid",
          "type": "uint256"
        },
        {
          "internalType": "uint48",
          "name": "validAfter",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "validUntil",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "targetSuccess",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "targetResult",
          "type": "bytes"
        }
      ],
      "name": "ExecutionResult",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "FailedOp",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderAddressResult",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "SignatureValidationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "preOpGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "prefund",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sigFailed",
              "type": "bool"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "paymasterContext",
              "type": "bytes"
            }
          ],
          "internalType": "struct IEntryPoint.ReturnInfo",
          "name": "returnInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "senderInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "factoryInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "paymasterInfo",
          "type": "tuple"
        }
      ],
      "name": "ValidationResult",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "preOpGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "prefund",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sigFailed",
              "type": "bool"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "bytes",
              "name": "paymasterContext",
              "type": "bytes"
            }
          ],
          "internalType": "struct IEntryPoint.ReturnInfo",
          "name": "returnInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "senderInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "factoryInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "paymasterInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "aggregator",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "stakeInfo",
              "type": "tuple"
            }
          ],
          "internalType": "struct IEntryPoint.AggregatorStakeInfo",
          "name": "aggregatorInfo",
          "type": "tuple"
        }
      ],
      "name": "ValidationResultWithAggregation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        }
      ],
      "name": "AccountDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "BeforeExecution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalDeposit",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "SignatureAggregatorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalStaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unstakeDelaySec",
          "type": "uint256"
        }
      ],
      "name": "StakeLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawTime",
          "type": "uint256"
        }
      ],
      "name": "StakeUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualGasUsed",
          "type": "uint256"
        }
      ],
      "name": "UserOperationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "revertReason",
          "type": "bytes"
        }
      ],
      "name": "UserOperationRevertReason",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint112",
              "name": "deposit",
              "type": "uint112"
            },
            {
              "internalType": "bool",
              "name": "staked",
              "type": "bool"
            },
            {
              "internalType": "uint112",
              "name": "stake",
              "type": "uint112"
            },
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            },
            {
              "internalType": "uint48",
              "name": "withdrawTime",
              "type": "uint48"
            }
          ],
          "internalType": "struct IStakeManager.DepositInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint192",
          "name": "key",
          "type": "uint192"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initCode",
          "type": "bytes"
        }
      ],
      "name": "getSenderAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "getUserOpHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UserOperation[]",
              "name": "userOps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAggregator",
              "name": "aggregator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct IEntryPoint.UserOpsPerAggregator[]",
          "name": "opsPerAggregator",
          "type": "tuple[]"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "handleAggregatedOps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation[]",
          "name": "ops",
          "type": "tuple[]"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "handleOps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint192",
          "name": "key",
          "type": "uint192"
        }
      ],
      "name": "incrementNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "op",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "targetCallData",
          "type": "bytes"
        }
      ],
      "name": "simulateHandleOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "simulateValidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "balanceOf(address)": "70a08231",
    "depositTo(address)": "b760faf9",
    "getDepositInfo(address)": "5287ce12",
    "getNonce(address,uint192)": "35567e1a",
    "getSenderAddress(bytes)": "9b249f69",
    "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "a6193531",
    "handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": "4b1d7cf5",
    "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": "1fad948c",
    "incrementNonce(uint192)": "0bd28e3b",
    "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": "d6383f94",
    "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "ee219423",
    "unlockStake()": "bb9fe6bf",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "preOpGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "paid",
              "type": "uint256"
            },
            {
              "internalType": "uint48",
              "name": "validAfter",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "validUntil",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "targetSuccess",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "targetResult",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ExecutionResult"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "opIndex",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "FailedOp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SenderAddressResult"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "aggregator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SignatureValidationFailed"
        },
        {
          "inputs": [
            {
              "internalType": "struct IEntryPoint.ReturnInfo",
              "name": "returnInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "preOpGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prefund",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "sigFailed",
                  "type": "bool"
                },
                {
                  "internalType": "uint48",
                  "name": "validAfter",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "validUntil",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterContext",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "senderInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "factoryInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "paymasterInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "ValidationResult"
        },
        {
          "inputs": [
            {
              "internalType": "struct IEntryPoint.ReturnInfo",
              "name": "returnInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "preOpGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "prefund",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "sigFailed",
                  "type": "bool"
                },
                {
                  "internalType": "uint48",
                  "name": "validAfter",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "validUntil",
                  "type": "uint48"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterContext",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "senderInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "factoryInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "paymasterInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct IEntryPoint.AggregatorStakeInfo",
              "name": "aggregatorInfo",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "aggregator",
                  "type": "address"
                },
                {
                  "internalType": "struct IStakeManager.StakeInfo",
                  "name": "stakeInfo",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "stake",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "unstakeDelaySec",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "type": "error",
          "name": "ValidationResultWithAggregation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AccountDeployed",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "BeforeExecution",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "aggregator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignatureAggregatorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "withdrawTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeUnlocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "withdrawAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "paymaster",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "actualGasUsed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserOperationEvent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "revertReason",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserOperationRevertReason",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "withdrawAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositInfo",
          "outputs": [
            {
              "internalType": "struct IStakeManager.DepositInfo",
              "name": "info",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint112",
                  "name": "deposit",
                  "type": "uint112"
                },
                {
                  "internalType": "bool",
                  "name": "staked",
                  "type": "bool"
                },
                {
                  "internalType": "uint112",
                  "name": "stake",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "unstakeDelaySec",
                  "type": "uint32"
                },
                {
                  "internalType": "uint48",
                  "name": "withdrawTime",
                  "type": "uint48"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint192",
              "name": "key",
              "type": "uint192"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getSenderAddress"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserOpHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IEntryPoint.UserOpsPerAggregator[]",
              "name": "opsPerAggregator",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct UserOperation[]",
                  "name": "userOps",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "initCode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "callData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "callGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "verificationGasLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "preVerificationGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPriorityFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "paymasterAndData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "contract IAggregator",
                  "name": "aggregator",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address payable",
              "name": "beneficiary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "handleAggregatedOps"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation[]",
              "name": "ops",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address payable",
              "name": "beneficiary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "handleOps"
        },
        {
          "inputs": [
            {
              "internalType": "uint192",
              "name": "key",
              "type": "uint192"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementNonce"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "op",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "targetCallData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "simulateHandleOp"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "simulateValidation"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "withdrawAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "_unstakeDelaySec": "the new lock duration before the deposit can be withdrawn."
            }
          },
          "balanceOf(address)": {
            "returns": {
              "_0": "the deposit (for gas payment) of the account"
            }
          },
          "getDepositInfo(address)": {
            "returns": {
              "info": "- full deposit information of given account"
            }
          },
          "getNonce(address,uint192)": {
            "params": {
              "key": "the high 192 bit of the nonce",
              "sender": "the account address"
            },
            "returns": {
              "nonce": "a full nonce to pass for next UserOp with this sender."
            }
          },
          "getSenderAddress(bytes)": {
            "params": {
              "initCode": "the constructor code to be passed into the UserOperation."
            }
          },
          "handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
            "params": {
              "beneficiary": "the address to receive the fees",
              "opsPerAggregator": "the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"
            }
          },
          "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
            "params": {
              "beneficiary": "the address to receive the fees",
              "ops": "the operations to execute"
            }
          },
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": {
            "params": {
              "op": "the UserOperation to simulate",
              "target": "if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.",
              "targetCallData": "callData to pass to target address"
            }
          },
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "details": "this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.",
            "params": {
              "userOp": "the user operation to validate."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value.",
              "withdrawAmount": "the amount to withdraw."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add to the account's stake - amount and delay any pending unstake is first cancelled."
          },
          "depositTo(address)": {
            "notice": "add to the deposit of the given account"
          },
          "getNonce(address,uint192)": {
            "notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
          },
          "getSenderAddress(bytes)": {
            "notice": "Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"
          },
          "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
          },
          "handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
            "notice": "Execute a batch of UserOperation with Aggregators"
          },
          "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
            "notice": "Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."
          },
          "incrementNonce(uint192)": {
            "notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
          },
          "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)": {
            "notice": "simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events."
          },
          "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."
          },
          "unlockStake()": {
            "notice": "attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."
          },
          "withdrawStake(address)": {
            "notice": "withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw from the deposit."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "account-abstraction/=lib/account-abstraction/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": "IEntryPoint"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
    "id": 496,
    "exportedSymbols": {
      "IAggregator": [
        289
      ],
      "IEntryPoint": [
        495
      ],
      "INonceManager": [
        514
      ],
      "IStakeManager": [
        620
      ],
      "UserOperation": [
        648
      ],
      "UserOperationLib": [
        818
      ],
      "calldataKeccak": [
        238
      ]
    },
    "nodeType": "SourceUnit",
    "src": "163:9251:3",
    "nodes": [
      {
        "id": 291,
        "nodeType": "PragmaDirective",
        "src": "163:24:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 292,
        "nodeType": "ImportDirective",
        "src": "311:29:3",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "file": "./UserOperation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 496,
        "sourceUnit": 819,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 293,
        "nodeType": "ImportDirective",
        "src": "341:29:3",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "file": "./IStakeManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 496,
        "sourceUnit": 621,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 294,
        "nodeType": "ImportDirective",
        "src": "371:27:3",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "file": "./IAggregator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 496,
        "sourceUnit": 290,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 295,
        "nodeType": "ImportDirective",
        "src": "399:29:3",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/INonceManager.sol",
        "file": "./INonceManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 496,
        "sourceUnit": 515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 495,
        "nodeType": "ContractDefinition",
        "src": "430:8982:3",
        "nodes": [
          {
            "id": 315,
            "nodeType": "EventDefinition",
            "src": "1185:179:3",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f",
            "name": "UserOperationEvent",
            "nameLocation": "1191:18:3",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1226:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1210:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1254:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1238:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "1278:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1262:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1297:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1289:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1309:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1304:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "1326:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1318:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualGasUsed",
                  "nameLocation": "1349:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 315,
                  "src": "1341:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1209:154:3"
            }
          },
          {
            "id": 326,
            "nodeType": "EventDefinition",
            "src": "1708:110:3",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 316,
              "nodeType": "StructuredDocumentation",
              "src": "1370:333:3",
              "text": " account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"
            },
            "eventSelector": "d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d",
            "name": "AccountDeployed",
            "nameLocation": "1714:15:3",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1746:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1730:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1774:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1758:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1790:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1782:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "1807:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "1799:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1729:88:3"
            }
          },
          {
            "id": 337,
            "nodeType": "EventDefinition",
            "src": "2166:119:3",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 327,
              "nodeType": "StructuredDocumentation",
              "src": "1824:337:3",
              "text": " An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."
            },
            "eventSelector": "1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201",
            "name": "UserOperationRevertReason",
            "nameLocation": "2172:25:3",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "2214:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2198:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2242:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2226:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2258:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2250:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "revertReason",
                  "nameLocation": "2271:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2265:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:87:3"
            }
          },
          {
            "id": 340,
            "nodeType": "EventDefinition",
            "src": "2454:24:3",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 338,
              "nodeType": "StructuredDocumentation",
              "src": "2291:158:3",
              "text": " an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."
            },
            "eventSelector": "bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972",
            "name": "BeforeExecution",
            "nameLocation": "2460:15:3",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2475:2:3"
            }
          },
          {
            "id": 345,
            "nodeType": "EventDefinition",
            "src": "2590:61:3",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 341,
              "nodeType": "StructuredDocumentation",
              "src": "2484:101:3",
              "text": " signature aggregator used by the following UserOperationEvents within this bundle."
            },
            "eventSelector": "575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d",
            "name": "SignatureAggregatorChanged",
            "nameLocation": "2596:26:3",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "2639:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "2623:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2622:28:3"
            }
          },
          {
            "id": 352,
            "nodeType": "ErrorDefinition",
            "src": "3418:47:3",
            "nodes": [],
            "documentation": {
              "id": 346,
              "nodeType": "StructuredDocumentation",
              "src": "2657:756:3",
              "text": " a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."
            },
            "errorSelector": "220266b6",
            "name": "FailedOp",
            "nameLocation": "3424:8:3",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "opIndex",
                  "nameLocation": "3441:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "3433:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "3457:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "3450:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3432:32:3"
            }
          },
          {
            "id": 357,
            "nodeType": "ErrorDefinition",
            "src": "3590:52:3",
            "nodes": [],
            "documentation": {
              "id": 353,
              "nodeType": "StructuredDocumentation",
              "src": "3471:114:3",
              "text": " error case when a signature aggregator fails to verify the aggregated signature it had created."
            },
            "errorSelector": "86a9f750",
            "name": "SignatureValidationFailed",
            "nameLocation": "3596:25:3",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "3630:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 357,
                  "src": "3622:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3621:20:3"
            }
          },
          {
            "id": 372,
            "nodeType": "ErrorDefinition",
            "src": "3980:124:3",
            "nodes": [],
            "documentation": {
              "id": 358,
              "nodeType": "StructuredDocumentation",
              "src": "3648:327:3",
              "text": " Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"
            },
            "errorSelector": "e0cff05f",
            "name": "ValidationResult",
            "nameLocation": "3986:16:3",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "returnInfo",
                  "nameLocation": "4014:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "4003:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReturnInfo_$470_memory_ptr",
                    "typeString": "struct IEntryPoint.ReturnInfo"
                  },
                  "typeName": {
                    "id": 360,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 359,
                      "name": "ReturnInfo",
                      "nameLocations": [
                        "4003:10:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 470,
                      "src": "4003:10:3"
                    },
                    "referencedDeclaration": 470,
                    "src": "4003:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReturnInfo_$470_storage_ptr",
                      "typeString": "struct IEntryPoint.ReturnInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "senderInfo",
                  "nameLocation": "4044:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "4034:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 363,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 362,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "4034:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 572,
                      "src": "4034:9:3"
                    },
                    "referencedDeclaration": 572,
                    "src": "4034:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "factoryInfo",
                  "nameLocation": "4066:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "4056:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 366,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 365,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "4056:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 572,
                      "src": "4056:9:3"
                    },
                    "referencedDeclaration": 572,
                    "src": "4056:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "paymasterInfo",
                  "nameLocation": "4089:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "4079:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 369,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 368,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "4079:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 572,
                      "src": "4079:9:3"
                    },
                    "referencedDeclaration": 572,
                    "src": "4079:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4002:101:3"
            }
          },
          {
            "id": 390,
            "nodeType": "ErrorDefinition",
            "src": "4676:183:3",
            "nodes": [],
            "documentation": {
              "id": 373,
              "nodeType": "StructuredDocumentation",
              "src": "4110:561:3",
              "text": " Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"
            },
            "errorSelector": "faecb4e4",
            "name": "ValidationResultWithAggregation",
            "nameLocation": "4682:31:3",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "returnInfo",
                  "nameLocation": "4725:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "4714:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReturnInfo_$470_memory_ptr",
                    "typeString": "struct IEntryPoint.ReturnInfo"
                  },
                  "typeName": {
                    "id": 375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 374,
                      "name": "ReturnInfo",
                      "nameLocations": [
                        "4714:10:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 470,
                      "src": "4714:10:3"
                    },
                    "referencedDeclaration": 470,
                    "src": "4714:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReturnInfo_$470_storage_ptr",
                      "typeString": "struct IEntryPoint.ReturnInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "senderInfo",
                  "nameLocation": "4755:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "4745:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 378,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 377,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "4745:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 572,
                      "src": "4745:9:3"
                    },
                    "referencedDeclaration": 572,
                    "src": "4745:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "factoryInfo",
                  "nameLocation": "4777:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "4767:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 381,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 380,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "4767:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 572,
                      "src": "4767:9:3"
                    },
                    "referencedDeclaration": 572,
                    "src": "4767:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "paymasterInfo",
                  "nameLocation": "4800:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "4790:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 384,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 383,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "4790:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 572,
                      "src": "4790:9:3"
                    },
                    "referencedDeclaration": 572,
                    "src": "4790:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "aggregatorInfo",
                  "nameLocation": "4843:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "4823:34:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AggregatorStakeInfo_$477_memory_ptr",
                    "typeString": "struct IEntryPoint.AggregatorStakeInfo"
                  },
                  "typeName": {
                    "id": 387,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 386,
                      "name": "AggregatorStakeInfo",
                      "nameLocations": [
                        "4823:19:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 477,
                      "src": "4823:19:3"
                    },
                    "referencedDeclaration": 477,
                    "src": "4823:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AggregatorStakeInfo_$477_storage_ptr",
                      "typeString": "struct IEntryPoint.AggregatorStakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4713:145:3"
            }
          },
          {
            "id": 395,
            "nodeType": "ErrorDefinition",
            "src": "4921:42:3",
            "nodes": [],
            "documentation": {
              "id": 391,
              "nodeType": "StructuredDocumentation",
              "src": "4865:51:3",
              "text": " return value of getSenderAddress"
            },
            "errorSelector": "6ca7b806",
            "name": "SenderAddressResult",
            "nameLocation": "4927:19:3",
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4955:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "4947:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4947:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4946:16:3"
            }
          },
          {
            "id": 410,
            "nodeType": "ErrorDefinition",
            "src": "5025:132:3",
            "nodes": [],
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "4969:51:3",
              "text": " return value of simulateHandleOp"
            },
            "errorSelector": "8b7ac980",
            "name": "ExecutionResult",
            "nameLocation": "5031:15:3",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "preOpGas",
                  "nameLocation": "5055:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5047:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5047:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "paid",
                  "nameLocation": "5073:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5065:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "5086:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5079:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "5079:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "5105:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5098:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "uint48",
                    "nodeType": "ElementaryTypeName",
                    "src": "5098:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "targetSuccess",
                  "nameLocation": "5122:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5117:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "targetResult",
                  "nameLocation": "5143:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "5137:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5137:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5046:110:3"
            }
          },
          {
            "id": 420,
            "nodeType": "StructDefinition",
            "src": "5201:188:3",
            "nodes": [],
            "canonicalName": "IEntryPoint.UserOpsPerAggregator",
            "members": [
              {
                "constant": false,
                "id": 414,
                "mutability": "mutable",
                "name": "userOps",
                "nameLocation": "5255:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 420,
                "src": "5239:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_UserOperation_$648_storage_$dyn_storage_ptr",
                  "typeString": "struct UserOperation[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 412,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 411,
                      "name": "UserOperation",
                      "nameLocations": [
                        "5239:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 648,
                      "src": "5239:13:3"
                    },
                    "referencedDeclaration": 648,
                    "src": "5239:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$648_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "id": 413,
                  "nodeType": "ArrayTypeName",
                  "src": "5239:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOperation_$648_storage_$dyn_storage_ptr",
                    "typeString": "struct UserOperation[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 417,
                "mutability": "mutable",
                "name": "aggregator",
                "nameLocation": "5315:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 420,
                "src": "5303:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAggregator_$289",
                  "typeString": "contract IAggregator"
                },
                "typeName": {
                  "id": 416,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 415,
                    "name": "IAggregator",
                    "nameLocations": [
                      "5303:11:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 289,
                    "src": "5303:11:3"
                  },
                  "referencedDeclaration": 289,
                  "src": "5303:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregator_$289",
                    "typeString": "contract IAggregator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 419,
                "mutability": "mutable",
                "name": "signature",
                "nameLocation": "5373:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 420,
                "src": "5367:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 418,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "5367:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserOpsPerAggregator",
            "nameLocation": "5208:20:3",
            "scope": 495,
            "visibility": "public"
          },
          {
            "id": 430,
            "nodeType": "FunctionDefinition",
            "src": "5768:87:3",
            "nodes": [],
            "documentation": {
              "id": 421,
              "nodeType": "StructuredDocumentation",
              "src": "5395:368:3",
              "text": " Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"
            },
            "functionSelector": "1fad948c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "handleOps",
            "nameLocation": "5777:9:3",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "ops",
                  "nameLocation": "5812:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "5787:28:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOperation_$648_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct UserOperation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 423,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 422,
                        "name": "UserOperation",
                        "nameLocations": [
                          "5787:13:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 648,
                        "src": "5787:13:3"
                      },
                      "referencedDeclaration": 648,
                      "src": "5787:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$648_storage_ptr",
                        "typeString": "struct UserOperation"
                      }
                    },
                    "id": 424,
                    "nodeType": "ArrayTypeName",
                    "src": "5787:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserOperation_$648_storage_$dyn_storage_ptr",
                      "typeString": "struct UserOperation[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "5833:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 430,
                  "src": "5817:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5786:59:3"
            },
            "returnParameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5854:0:3"
            },
            "scope": 495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 440,
            "nodeType": "FunctionDefinition",
            "src": "6115:139:3",
            "nodes": [],
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "5861:249:3",
              "text": " Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"
            },
            "functionSelector": "4b1d7cf5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "handleAggregatedOps",
            "nameLocation": "6124:19:3",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "opsPerAggregator",
                  "nameLocation": "6185:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "6153:48:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$420_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 433,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 432,
                        "name": "UserOpsPerAggregator",
                        "nameLocations": [
                          "6153:20:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 420,
                        "src": "6153:20:3"
                      },
                      "referencedDeclaration": 420,
                      "src": "6153:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOpsPerAggregator_$420_storage_ptr",
                        "typeString": "struct IEntryPoint.UserOpsPerAggregator"
                      }
                    },
                    "id": 434,
                    "nodeType": "ArrayTypeName",
                    "src": "6153:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$420_storage_$dyn_storage_ptr",
                      "typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "6227:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "6211:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6211:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6143:101:3"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6253:0:3"
            },
            "scope": 495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 449,
            "nodeType": "FunctionDefinition",
            "src": "6462:86:3",
            "nodes": [],
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "6260:197:3",
              "text": " generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
            },
            "functionSelector": "a6193531",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserOpHash",
            "nameLocation": "6471:13:3",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "6508:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6485:29:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$648_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 442,
                      "name": "UserOperation",
                      "nameLocations": [
                        "6485:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 648,
                      "src": "6485:13:3"
                    },
                    "referencedDeclaration": 648,
                    "src": "6485:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$648_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6484:31:3"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "6539:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6539:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6538:9:3"
            },
            "scope": 495,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 456,
            "nodeType": "FunctionDefinition",
            "src": "6957:68:3",
            "nodes": [],
            "documentation": {
              "id": 450,
              "nodeType": "StructuredDocumentation",
              "src": "6554:398:3",
              "text": " Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."
            },
            "functionSelector": "ee219423",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateValidation",
            "nameLocation": "6966:18:3",
            "parameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "7008:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "6985:29:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$648_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 452,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 451,
                      "name": "UserOperation",
                      "nameLocations": [
                        "6985:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 648,
                      "src": "6985:13:3"
                    },
                    "referencedDeclaration": 648,
                    "src": "6985:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$648_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6984:31:3"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7024:0:3"
            },
            "scope": 495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 470,
            "nodeType": "StructDefinition",
            "src": "7624:186:3",
            "nodes": [],
            "canonicalName": "IEntryPoint.ReturnInfo",
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "7031:588:3",
              "text": " gas and return values during simulation\n @param preOpGas the gas used for validation (including preValidationGas)\n @param prefund the required prefund for this operation\n @param sigFailed validateUserOp's (or paymaster's) signature check failed\n @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)"
            },
            "members": [
              {
                "constant": false,
                "id": 459,
                "mutability": "mutable",
                "name": "preOpGas",
                "nameLocation": "7660:8:3",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "7652:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 458,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7652:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 461,
                "mutability": "mutable",
                "name": "prefund",
                "nameLocation": "7686:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "7678:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 460,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7678:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 463,
                "mutability": "mutable",
                "name": "sigFailed",
                "nameLocation": "7708:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "7703:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 462,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7703:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 465,
                "mutability": "mutable",
                "name": "validAfter",
                "nameLocation": "7734:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "7727:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 464,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "7727:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 467,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "7761:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "7754:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint48",
                  "typeString": "uint48"
                },
                "typeName": {
                  "id": 466,
                  "name": "uint48",
                  "nodeType": "ElementaryTypeName",
                  "src": "7754:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint48",
                    "typeString": "uint48"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 469,
                "mutability": "mutable",
                "name": "paymasterContext",
                "nameLocation": "7787:16:3",
                "nodeType": "VariableDeclaration",
                "scope": 470,
                "src": "7781:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 468,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "7781:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ReturnInfo",
            "nameLocation": "7631:10:3",
            "scope": 495,
            "visibility": "public"
          },
          {
            "id": 477,
            "nodeType": "StructDefinition",
            "src": "7945:91:3",
            "nodes": [],
            "canonicalName": "IEntryPoint.AggregatorStakeInfo",
            "documentation": {
              "id": 471,
              "nodeType": "StructuredDocumentation",
              "src": "7816:124:3",
              "text": " returned aggregated signature info.\n the aggregator returned by the account, and its current stake."
            },
            "members": [
              {
                "constant": false,
                "id": 473,
                "mutability": "mutable",
                "name": "aggregator",
                "nameLocation": "7990:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 477,
                "src": "7982:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 472,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7982:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 476,
                "mutability": "mutable",
                "name": "stakeInfo",
                "nameLocation": "8020:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 477,
                "src": "8010:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                  "typeString": "struct IStakeManager.StakeInfo"
                },
                "typeName": {
                  "id": 475,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 474,
                    "name": "StakeInfo",
                    "nameLocations": [
                      "8010:9:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 572,
                    "src": "8010:9:3"
                  },
                  "referencedDeclaration": 572,
                  "src": "8010:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$572_storage_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AggregatorStakeInfo",
            "nameLocation": "7952:19:3",
            "scope": 495,
            "visibility": "public"
          },
          {
            "id": 483,
            "nodeType": "FunctionDefinition",
            "src": "8384:58:3",
            "nodes": [],
            "documentation": {
              "id": 478,
              "nodeType": "StructuredDocumentation",
              "src": "8042:337:3",
              "text": " Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."
            },
            "functionSelector": "9b249f69",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderAddress",
            "nameLocation": "8393:16:3",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "initCode",
                  "nameLocation": "8423:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "8410:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8410:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8409:23:3"
            },
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8441:0:3"
            },
            "scope": 495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 494,
            "nodeType": "FunctionDefinition",
            "src": "9301:109:3",
            "nodes": [],
            "documentation": {
              "id": 484,
              "nodeType": "StructuredDocumentation",
              "src": "8449:847:3",
              "text": " simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"
            },
            "functionSelector": "d6383f94",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateHandleOp",
            "nameLocation": "9310:16:3",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "op",
                  "nameLocation": "9350:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "9327:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$648_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 486,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 485,
                      "name": "UserOperation",
                      "nameLocations": [
                        "9327:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 648,
                      "src": "9327:13:3"
                    },
                    "referencedDeclaration": 648,
                    "src": "9327:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$648_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "9362:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "9354:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9354:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "targetCallData",
                  "nameLocation": "9385:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "9370:29:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9370:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9326:74:3"
            },
            "returnParameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9409:0:3"
            },
            "scope": 495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 296,
              "name": "IStakeManager",
              "nameLocations": [
                "455:13:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 620,
              "src": "455:13:3"
            },
            "id": 297,
            "nodeType": "InheritanceSpecifier",
            "src": "455:13:3"
          },
          {
            "baseName": {
              "id": 298,
              "name": "INonceManager",
              "nameLocations": [
                "470:13:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 514,
              "src": "470:13:3"
            },
            "id": 299,
            "nodeType": "InheritanceSpecifier",
            "src": "470:13:3"
          }
        ],
        "canonicalName": "IEntryPoint",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          495,
          514,
          620
        ],
        "name": "IEntryPoint",
        "nameLocation": "440:11:3",
        "scope": 496,
        "usedErrors": [
          352,
          357,
          372,
          390,
          395,
          410
        ],
        "usedEvents": [
          315,
          326,
          337,
          340,
          345,
          523,
          531,
          540,
          547,
          555
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 3
}